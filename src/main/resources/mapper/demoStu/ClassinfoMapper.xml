<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pcwl.demo.demoStu.dao.ClassinfoDao">

	<select id="get" resultType="com.pcwl.demo.demoStu.domain.ClassinfoDO">
		select `classId`,`cName`,`cPresentation` from classinfo where classId = #{value}
	</select>

	<select id="list" resultType="com.pcwl.demo.demoStu.domain.ClassinfoDO">
		select `classId`,`cName`,`cPresentation` from classinfo
        <where>  
		  		  <if test="classid != null and classid != ''"> and classId = #{classid} </if>
		  		  <if test="cname != null and cname != ''"> and cName = #{cname} </if>
		  		  <if test="cpresentation != null and cpresentation != ''"> and cPresentation = #{cpresentation} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by classId desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from classinfo
		 <where>  
		  		  <if test="classid != null and classid != ''"> and classId = #{classid} </if>
		  		  <if test="cname != null and cname != ''"> and cName = #{cname} </if>
		  		  <if test="cpresentation != null and cpresentation != ''"> and cPresentation = #{cpresentation} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.pcwl.demo.demoStu.domain.ClassinfoDO" useGeneratedKeys="true" keyProperty="classid">
		insert into classinfo
		(
			`cName`, 
			`cPresentation`
		)
		values
		(
			#{cname}, 
			#{cpresentation}
		)
	</insert>
	 
	<update id="update" parameterType="com.pcwl.demo.demoStu.domain.ClassinfoDO">
		update classinfo 
		<set>
			<if test="cname != null">`cName` = #{cname}, </if>
			<if test="cpresentation != null">`cPresentation` = #{cpresentation}</if>
		</set>
		where classId = #{classid}
	</update>
	
	<delete id="remove">
		delete from classinfo where classId = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from classinfo where classId in 
		<foreach item="classid" collection="array" open="(" separator="," close=")">
			#{classid}
		</foreach>
	</delete>

</mapper>